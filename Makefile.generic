# ==============================================================================
# Makefile pour un projet Python simple (sans Docker).
# Gère l'environnement virtuel, les dépendances, les tests et le nettoyage.
# ==============================================================================

# --- Variables ---
VENV_DIR      := .venv
PYTHON        := $(VENV_DIR)/bin/python
PIP           := $(VENV_DIR)/bin/pip
CLIENT_SCRIPT := main.py

# --- Cibles Principales ---
.PHONY: help run setup test clean force-update

# Tâche par défaut
help:
	@echo "Commandes disponibles :"
	@echo ""
	@echo "--- Exécution de l'Application ---"
	@echo "  \033[0;32mrun\033[0m          : Lance le script Python principal."
	@echo ""
	@echo "--- Gestion de l'Environnement ---"
	@echo "  \033[0;33msetup\033[0m         : (Re)Crée l'environnement virtuel et installe les dépendances."
	@echo "  \033[0;33mforce-update\033[0m  : Force la mise à jour des dépendances."
	@echo "  \033[0;33mclean\033[0m         : Nettoie les fichiers temporaires ET supprime l'environnement virtuel."
	@echo ""
	@echo "--- Qualité du Code & Tests ---"
	@echo "  \033[0;34mtest\033[0m          : Lance les tests unitaires avec pytest."

# --- Implémentation des Cibles ---

# Exécution de l'Application
run:
	@echo "-> Lancement du script principal..."
	@$(PYTHON) $(CLIENT_SCRIPT)

# Gestion de l'Environnement
setup:
	@echo "-> Création de l'environnement virtuel dans [$(VENV_DIR)]..."
	@python3 -m venv $(VENV_DIR)
	@echo "-> Installation des dépendances de production..."
	@$(PIP) install -r requirements.txt
	@echo "-> Installation des dépendances de développement..."
	@$(PIP) install -r requirements-dev.txt
	@echo "-> Installation des hooks pre-commit..."
	@$(PYTHON) -m pre_commit install
	@echo "-> ✅ Environnement de développement prêt !"

force-update:
	@echo "-> Nettoyage du cache pip..."
	@$(PIP) cache purge
	@echo "-> Mise à jour des dépendances depuis requirements.txt..."
	@$(PIP) install --no-cache-dir -r requirements.txt

# Qualité du Code & Tests
test:
	@echo "-> Lancement des tests unitaires..."
	@$(PYTHON) -m pytest tests -v --tb=short

clean:
	@echo "-> Nettoyage des fichiers temporaires..."
	@find . -type f -name '*.pyc' -delete
	@find . -type d -name '__pycache__' -exec rm -rf {} + 2>/dev/null || true
	@find . -type d -name '.pytest_cache' -exec rm -rf {} + 2>/dev/null || true
	@find . -type d -name 'htmlcov' -exec rm -rf {} + 2>/dev/null || true
	@rm -f crypto_data.db
	@echo "-> Suppression de l'environnement virtuel..."
	@rm -rf $(VENV_DIR)
	@echo "-> ✅ Nettoyage complet terminé."
